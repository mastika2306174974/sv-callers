{"version": null, "code": "gASV4AUAAAAAAAAoQxJ0AGQBfA58EWQCjQMBAGQAUwCUKIwFaW5wdXSUjAZvdXRwdXSUjAZwYXJhbXOUjAl3aWxkY2FyZHOUjAd0aHJlYWRzlIwJcmVzb3VyY2VzlIwDbG9nlIwHdmVyc2lvbpSMBHJ1bGWUjAljb25kYV9lbnaUjA1jb250YWluZXJfaW1nlIwQc2luZ3VsYXJpdHlfYXJnc5SMD3VzZV9zaW5ndWxhcml0eZSMC2Vudl9tb2R1bGVzlIwMYmVuY2hfcmVjb3JklIwFam9iaWSUjAhpc19zaGVsbJSMD2JlbmNoX2l0ZXJhdGlvbpSMD2NsZWFudXBfc2NyaXB0c5SMCnNoYWRvd19kaXKUjA1lZGl0X25vdGVib29rlIwPY29uZGFfYmFzZV9wYXRolIwHYmFzZWRpcpSMGHJ1bnRpbWVfc291cmNlY2FjaGVfcGF0aJSMGF9faXNfc25ha2VtYWtlX3J1bGVfZnVuY5R0lF2UKE5YUgQAAAogICAgICAgIHNldCAteGUKCiAgICAgICAgIyBpZiAndG1wc3BhY2UnIHNldCB0byA+ME1CIHVzZSBUTVBESVIgb3RoZXJ3aXNlIHVzZSBPVVRESVIKICAgICAgICBPVVRESVI9IiQoZGlybmFtZSAie291dHB1dH0iKSIKICAgICAgICBQUkVGSVg9IiQoYmFzZW5hbWUgIntvdXRwdXR9IiAudmNmKSIKICAgICAgICBPVVRGSUxFPSIke3tPVVRESVJ9fS8ke3tQUkVGSVh9fS51bmZpbHRlcmVkLnZjZiIKICAgICAgICBUTVA9JChbICJ7cmVzb3VyY2VzLnRtcF9tYn0iIC1lcSAiMCIgXSAmJgogICAgICAgICAgICBlY2hvICIke3tPVVRESVJ9fSIgfHwgZWNobyAiJHt7VE1QRElSfX0iKQoKICAgICAgICAjIHJ1biBkdW1teSBvciByZWFsIGpvYgogICAgICAgIGlmIFsgIntjb25maWcuZWNob19ydW59IiAtZXEgIjEiIF07IHRoZW4KICAgICAgICAgICAgZWNobyAie2lucHV0fSIgIiR7e1RNUH19IiA+ICJ7b3V0cHV0fSIKICAgICAgICBlbHNlCiAgICAgICAgICAgIGx1bXB5ZXhwcmVzcyAgICAgICAgICAgICAgICAgLUIgIntpbnB1dC50dW1vcl9iYW19Iiwie2lucHV0Lm5vcm1hbF9iYW19IiAgICAgICAgICAgICAgICAge3BhcmFtcy5leGNsX29wdH0gICAgICAgICAgICAgICAgIC1vICIke3tPVVRGSUxFfX0iICAgICAgICAgICAgICAgICAtbSA0IGAjIG1pbi4gc2FtcGxlIHdlaWdodGAgICAgICAgICAgICAgICAgIC1yIDAgYCMgdHJpbSB0aHJlc2hvbGRgICAgICAgICAgICAgICAgICAtayBgIyBrZWVwIHRtcCBmaWxlc2AgICAgICAgICAgICAgICAgIC1UICIke3tUTVB9fS9sdW1weS4ke3tSQU5ET019fSIKICAgICAgICAgICAgIyBzb21hdGljICsgU1YgcXVhbGl0eSBmaWx0ZXJpbmcKICAgICAgICAgICAgIyAgICdub3JtYWwnIHNhbXBsZSBhc3N1bWVzIGluZGV4IDEKICAgICAgICAgICAgYmNmdG9vbHMgZmlsdGVyICAgICAgICAgICAgICAgICAtTyB2IGAjIHVuY29tcHJlc3NlZCBWQ0YgZm9ybWF0YCAgICAgICAgICAgICAgICAgLW8gIntvdXRwdXR9IiAgICAgICAgICAgICAgICAgLWkgIkZPUk1BVC9TVVsxXSA9PSAwICYmIEZJTFRFUiA9PSAnLiciICAgICAgICAgICAgICAgICAiJHt7T1VURklMRX19IgogICAgICAgIGZpCiAgICAgICAglGgPaBKGlGWMBXNoZWxslIWUdJQu", "rule": "lumpy_p", "input": ["data/bam/3/N3.bam", "data/bam/3/N3.bam.bai", "data/bam/3/T3.bam", "data/bam/3/T3.bam.bai", "data/fasta/chr22.fasta", "data/fasta/chr22.fasta.fai"], "log": [], "params": ["'-x \"data/ENCFF001TDO.bed\"'"], "shellcmd": "\n        set -xe\n\n        # if 'tmpspace' set to >0MB use TMPDIR otherwise use OUTDIR\n        OUTDIR=\"$(dirname \"data/bam/3/T3--N3/lumpy_out/lumpy.vcf\")\"\n        PREFIX=\"$(basename \"data/bam/3/T3--N3/lumpy_out/lumpy.vcf\" .vcf)\"\n        OUTFILE=\"${OUTDIR}/${PREFIX}.unfiltered.vcf\"\n        TMP=$([ \"0\" -eq \"0\" ] &&\n            echo \"${OUTDIR}\" || echo \"${TMPDIR}\")\n\n        # run dummy or real job\n        if [ \"1\" -eq \"1\" ]; then\n            echo \"data/fasta/chr22.fasta data/fasta/chr22.fasta.fai data/bam/3/T3.bam data/bam/3/T3.bam.bai data/bam/3/N3.bam data/bam/3/N3.bam.bai\" \"${TMP}\" > \"data/bam/3/T3--N3/lumpy_out/lumpy.vcf\"\n        else\n            lumpyexpress                 -B \"data/bam/3/T3.bam\",\"data/bam/3/N3.bam\"                 -x \"data/ENCFF001TDO.bed\"                 -o \"${OUTFILE}\"                 -m 4 `# min. sample weight`                 -r 0 `# trim threshold`                 -k `# keep tmp files`                 -T \"${TMP}/lumpy.${RANDOM}\"\n            # somatic + SV quality filtering\n            #   'normal' sample assumes index 1\n            bcftools filter                 -O v `# uncompressed VCF format`                 -o \"data/bam/3/T3--N3/lumpy_out/lumpy.vcf\"                 -i \"FORMAT/SU[1] == 0 && FILTER == '.'\"                 \"${OUTFILE}\"\n        fi\n        ", "incomplete": false, "starttime": 1715288989.8314655, "endtime": 1715289001.8554552, "job_hash": 8738506764628, "conda_env": "LS0tCmNoYW5uZWxzOgogIC0gY29uZGEtZm9yZ2UKICAtIGJpb2NvbmRhCgpkZXBlbmRlbmNpZXM6CiAgLSBtYW50YT0xLjEuMAogIC0gZGVsbHk9MC43LjcKICAtIGx1bXB5LXN2PTAuMi4xMwogIC0gZ3JpZHNzPTEuMy40CiAgLSBzYW1ibGFzdGVyPTAuMS4yNAogIC0gYmM9MS4wNgogIC0gci1iYXNlPTMuNS4xCiAgLSBid2E9MC43LjE1CiAgLSBzYW10b29scz0xLjkKICAtIGJjZnRvb2xzPTEuOQo=", "container_img_url": null}